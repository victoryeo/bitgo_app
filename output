BitGoJS library version: 11.16.0
{
  id: '60d9371cae356000065b00e30175f644',
  client: 'bitgo',
  user: '60d7198e5d51350006dd379cbe43fddf',
  scope: [
    'openid',
    'profile',
    'wallet_view_all',
    'wallet_spend_all',
    'wallet_manage_all',
    'wallet_create',
    'pending_approval_update',
    'portfolio_view',
    'trade_view',
    'trade_trade'
  ],
  created: '2021-06-28T02:42:36.744Z',
  expires: '2031-06-26T02:42:36.744Z',
  ip: '42.153.50.46',
  ipRestrict: [ '42.153.50.46' ],
  origin: 'app.bitgo-test.com',
  label: 'test',
  isExtensible: false
}
Wallet {
  bitgo: BitGo {
    _hmacVerification: true,
    _authVersion: 2,
    _baseUrl: 'https://app.bitgo-test.com',
    env: 'test',
    _env: 'test',
    _baseApiUrl: 'https://app.bitgo-test.com/api/v1',
    _baseApiUrlV2: 'https://app.bitgo-test.com/api/v2',
    _keychains: null,
    _wallets: null,
    _clientId: undefined,
    _clientSecret: undefined,
    _token: '3aa0183e6fb04a07f023dc476f0bdcc671f3be6ad8ea54d06233dbab1e2b6e63',
    _refreshToken: undefined,
    _userAgent: 'BitGoJS/11.16.0',
    _promise: [Function: Promise] {
      TypeError: [Function: TypeError],
      RangeError: [Function: RangeError],
      CancellationError: [Function: SubError],
      TimeoutError: [Function: SubError],
      OperationalError: [Function: OperationalError],
      RejectionError: [Function: OperationalError],
      AggregateError: [Function: SubError],
      _peekContext: [Function],
      onPossiblyUnhandledRejection: [Function],
      onUnhandledRejectionHandled: [Function],
      longStackTraces: [Function],
      hasLongStackTraces: [Function],
      config: [Function],
      getNewLibraryCopy: [Function],
      is: [Function],
      fromCallback: [Function],
      fromNode: [Function],
      all: [Function],
      cast: [Function],
      fulfilled: [Function],
      resolve: [Function],
      rejected: [Function],
      reject: [Function],
      setScheduler: [Function],
      pending: [Function],
      defer: [Function],
      method: [Function],
      try: [Function],
      attempt: [Function],
      bind: [Function],
      PromiseInspection: [Function: PromiseInspection],
      join: [Function],
      Promise: [Circular],
      version: '3.7.2',
      coroutine: [Function],
      spawn: [Function],
      map: [Function],
      promisify: [Function],
      promisifyAll: [Function],
      props: [Function],
      race: [Function],
      reduce: [Function],
      settle: [Function],
      allSettled: [Function],
      some: [Function],
      _SomePromiseArray: [Function: SomePromiseArray],
      delay: [Function],
      using: [Function],
      any: [Function],
      each: [Function],
      mapSeries: [Function: PromiseMapSeries],
      filter: [Function],
      noConflict: [Function: noConflict]
    },
    _validate: true,
    _proxy: undefined,
    get: [Function],
    post: [Function],
    put: [Function],
    del: [Function],
    patch: [Function]
  },
  baseCoin: Tbtc {
    bitgo: BitGo {
      _hmacVerification: true,
      _authVersion: 2,
      _baseUrl: 'https://app.bitgo-test.com',
      env: 'test',
      _env: 'test',
      _baseApiUrl: 'https://app.bitgo-test.com/api/v1',
      _baseApiUrlV2: 'https://app.bitgo-test.com/api/v2',
      _keychains: null,
      _wallets: null,
      _clientId: undefined,
      _clientSecret: undefined,
      _token: '3aa0183e6fb04a07f023dc476f0bdcc671f3be6ad8ea54d06233dbab1e2b6e63',
      _refreshToken: undefined,
      _userAgent: 'BitGoJS/11.16.0',
      _promise: [Function],
      _validate: true,
      _proxy: undefined,
      get: [Function],
      post: [Function],
      put: [Function],
      del: [Function],
      patch: [Function]
    },
    _url: 'https://app.bitgo-test.com/api/v2/',
    _wallets: Wallets { bitgo: [BitGo], baseCoin: [Circular] },
    _keychains: Keychains { bitgo: [BitGo], baseCoin: [Circular] },
    _webhooks: Webhooks { bitgo: [BitGo], baseCoin: [Circular] },
    _pendingApprovals: PendingApprovals { bitgo: [BitGo], baseCoin: [Circular] },
    _enterprises: Enterprises { bitgo: [BitGo], baseCoin: [Circular] },
    _markets: Markets { bitgo: [BitGo], baseCoin: [Circular] },
    _network: {
      messagePrefix: '\u0018Bitcoin Signed Message:\n',
      bech32: 'tb',
      bip32: [Object],
      pubKeyHash: 111,
      scriptHash: 196,
      wif: 239,
      coin: 'btc'
    }
  },
  _wallet: {
    id: '60d938b3ae356000065b1222c9766853',
    users: [ [Object] ],
    coin: 'tbtc',
    label: 'firstwallet',
    m: 2,
    n: 3,
    keys: [
      '60d938b1e574e200064b872cb0dfe8d7',
      '60d938b10d4b570006de27e7116a23bb',
      '60d938b2a9fa9f0006bc5ce736b31d85'
    ],
    keySignatures: {
      backupPub: '208dd25c6d0e4698a2ebfc45e8532bb086dd2c60bc684b3578280a032cc72c132673cd24065026a084836ebd7f7e50e76da6a645fbb0277bf74f23ef362be39325',
      bitgoPub: '1f814dcc42fe03124b99bc70d9ae1656c85ce2ecad03262000dc44eb89a1c9efdd1808b89b979cb8b9b9c938534d7981b24a798859e13c09e678e5fbc4d62375b6'
    },
    tags: [ '60d938b3ae356000065b1222c9766853' ],
    disableTransactionNotifications: false,
    freeze: {},
    deleted: false,
    approvalsRequired: 1,
    isCold: false,
    coinSpecific: {},
    admin: {},
    clientFlags: [],
    allowBackupKeySigning: false,
    recoverable: false,
    startDate: '2021-06-28T02:49:23.000Z',
    type: 'hot',
    buildDefaults: {},
    customChangeKeySignatures: {},
    hasLargeNumberOfAddresses: false,
    config: {},
    balance: 0,
    confirmedBalance: 0,
    spendableBalance: 0,
    balanceString: '0',
    confirmedBalanceString: '0',
    spendableBalanceString: '0',
    receiveAddress: {
      id: '60d938b3ae356000065b1229122eff0c',
      address: '2MvuR44ArYwLJC88kgVY2nTgaLb7guUyviz',
      chain: 0,
      index: 0,
      coin: 'tbtc',
      wallet: '60d938b3ae356000065b1222c9766853',
      coinSpecific: [Object]
    },
    pendingApprovals: []
  }
}
{
  id: '60d938b63c6b40000636eea042ae7d57',
  address: '2N8GMTeuQLv769tuezqpvjziCJMqAZgQTM6',
  chain: 10,
  index: 1,
  coin: 'tbtc',
  wallet: '60d938b3ae356000065b1222c9766853',
  coinSpecific: {
    redeemScript: '002050fb65dbcf9969a6fe78df54b3476c6d2600f02cf66955fdc5b79c547f0adb14',
    witnessScript: '5221036c011f122c9572c27f50784b91e48a67ab84bf0b64d215ee98898baae3b071ba21039200ea9d98c5fd4e546a886ae29c65e9bbec7dc08880eb10ebe518ef7b61798a210269d52aa23cf317b20644867a593fa108f9627529bdb98d92f11c88ed6933363853ae'
  },
  addressType: 'p2shP2wsh',
  keychains: [
    {
      id: '60d938b1e574e200064b872cb0dfe8d7',
      pub: 'xpub661MyMwAqRbcFHCJVcg8zZQ6XyiWcuUXkMMorC8q6JCuo3fBsc1HTgQSemn1GuBKzvFnvJJYScpvrDbjkZT5wspMKsbGESKUBEfGLN6s7iQ',
      ethAddress: '0xdd2cb71518ebe479a832c487431ed1d5d2acce82',
      source: 'user',
      encryptedPrv: '{"iv":"bRN8XjhWKTvUvQlrGidtbA==","v":1,"iter":10000,"ks":256,"ts":64,"mode":"ccm","adata":"","cipher":"aes","salt":"NGkTmBQCtIY=","ct":"M0V3Elf8XOfR4Pb0ltUov7i0qCKpiTyqjS0tPIkYOJbkzgVFHfTEru1hKJprUTUtfoIr/6n7issCgkPPhmw+YCzyyEE5GuKziQO0+X28Sg0GHP0RXVBgywu6Qq/BBrdzSgmTcDQy9QE2jHmmSnHFlOo7vguo1C4="}',
      coinSpecific: {}
    },
    {
      id: '60d938b10d4b570006de27e7116a23bb',
      pub: 'xpub661MyMwAqRbcGx8ZLQ1o4euDr6d4XfWqibhzxUhwafmB1dsHsw15FB57A3TaVmWAYTHWqoQnMjDXo8hk4iXm6XUagKpSFB9PkasNBMKJKt5',
      ethAddress: '0x926498ff7fe3bb44ba3c80ad7fe7881a34704b1a',
      source: 'backup',
      coinSpecific: {}
    },
    {
      id: '60d938b2a9fa9f0006bc5ce736b31d85',
      pub: 'xpub661MyMwAqRbcFBY5XdAY9b5TGTr4cpGUiM6CtmmyHy2to4Gjtau8PYc1JZq3RUEW7oS29Giie6qgSoAnkz3riRsoNXAZktsipfEj2n9tqex',
      ethAddress: '0x5a89009b8a2ff0dd28e863f83c3f21b83c2c1194',
      source: 'bitgo',
      isBitGo: true,
      coinSpecific: {}
    }
  ]
}
{ coin: 'tbtc', transfers: [] }
(node:663492) UnhandledPromiseRejectionWarning: Error: insufficient funds

